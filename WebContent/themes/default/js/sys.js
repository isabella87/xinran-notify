// Generated by CoffeeScript 1.8.0
(function() {
  var DLG_TRUE_CB, SYS_VERSION, __root, __sysRef, __wrapCallbacks, __wrapErr,
    __slice = [].slice;

  __root = this;

  SYS_VERSION = '1.0.0';

  if (!__root.Sys) {
    __root.Sys = {};
  }

  __sysRef = __root.Sys;

  if (!__sysRef.config) {
    __sysRef.config = {
      version: SYS_VERSION
    };
  }


  /*
  Enhance String
   */

  if (typeof String.prototype.trim !== 'function') {
    String.prototype.trim = function() {
      return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
    };
  }

  if (typeof String.prototype.join !== 'function') {
    String.prototype.join = function(data) {
      var d, s, _i, _len;
      s = '';
      if (data) {
        for (_i = 0, _len = data.length; _i < _len; _i++) {
          d = data[_i];
          if (!s) {
            s = s + d;
          } else {
            s = s + this + d;
          }
        }
      }
      return s;
    };
  }


  /*
  Enhance object
   */

  if (typeof Object["extends"] !== 'function') {
    Object["extends"] = function(subc, superc) {
      var Temp;
      __root.assert(typeof subc === 'function');
      __root.assert(typeof superc === 'function');
      Temp = function() {};
      Temp.prototype = superc.prototype;
      subc.prototype = new Temp();
      subc.prototype.constructor = subc;
      subc.uber = superc.prototype;
      return subc.prototype;
    };
  }


  /*
  Extend jQuery
   */

  jQuery.fn.serializeObject = function() {
    var a, kp, o, _i, _len;
    o = {};
    a = this.serializeArray();
    for (_i = 0, _len = a.length; _i < _len; _i++) {
      kp = a[_i];
      if (!kp.name) {
        continue;
      }
      o[kp.name] = $.trim(kp.value);
    }
    return o;
  };


  /*
  Enhance __root
   */


  /*
  Log
   */

  if (typeof __root.log !== 'function') {
    __root.log = function(msg) {
      return typeof console !== "undefined" && console !== null ? console.log(msg) : void 0;
    };
  }


  /*
  Assert
   */

  if (typeof __root.assert !== 'function') {
    __root.assert = function(c, msg) {
      if (msg == null) {
        msg = '';
      }
      if (typeof console !== "undefined" && console !== null ? console.assert : void 0) {
        return console.assert(c, msg);
      } else if (!c) {
        msg = !msg ? 'Assertion failed' : 'Assertion failed: ' + msg;
        if (__root.log) {
          return console.log(msg);
        } else if (typeof Error !== 'undefined') {
          throw new Error(msg);
        } else {
          throw msg;
        }
      }
    };
  }


  /*
  Set root url
   */

  __sysRef.setRootUrl = function(url) {
    return __sysRef.__relRootUrl = url != null ? url : '';
  };


  /*
  Set root image url
   */

  __sysRef.setImageUrl = function(url) {
    return __sysRef.__relImageUrl = url != null ? url : '';
  };


  /*
  Eval relative url
   */

  __sysRef.evalUrl = function(src) {
    var url;
    url = __sysRef.joinUrl(__sysRef.__relRootUrl, src != null ? src.toString() : '');
    if (url[0] === '/') {
      return url.slice(1);
    } else {
      return url;
    }
  };


  /*
  Eval relateive image url
   */

  __sysRef.evalImageUrl = function(src) {
    var url;
    url = __sysRef.joinUrl(__sysRef.__relImageUrl, src != null ? src.toString() : '');
    if (url[0] === '/') {
      return url.slice(1);
    } else {
      return url;
    }
  };


  /*
  Join multiple part into url
   */

  __sysRef.joinUrl = function() {
    var ary, p, p0, path, _i, _len;
    path = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    if (path.length === 0) {
      return '';
    }
    p0 = path.shift();
    ary = [p0];
    for (_i = 0, _len = path.length; _i < _len; _i++) {
      p = path[_i];
      if (p0.slice(-1) !== '/' && p[0] !== '/') {
        ary.push('/' + p);
      } else {
        ary.push(p);
      }
      p0 = p;
    }
    return ary.join('');
  };


  /*
  Execute ajax get
  @param url url
  @param data data to be sent
  @param success callback function when succeeded
  @param error callback function when failed
   */

  __sysRef.get = function(url, data, success, error) {
    var key, qs, sfa, value, _ref;
    _ref = __wrapCallbacks(success, error), success = _ref[0], error = _ref[1];
    qs = '';
    if (data != null) {
      if (typeof data !== 'object') {
        throw 'Expected [object], but ' + data;
      }
      sfa = [];
      for (key in data) {
        value = data[key];
        sfa.push(__root.encodeURIComponent(key) + '=' + __root.encodeURIComponent(value));
      }
      qs = sfa.join('&');
    }
    if (qs.length !== 0) {
      url = url + '?' + qs;
    }
    __root.log('GET ' + url);
    return jQuery.ajax({
      url: url,
      method: 'GET',
      dataType: 'json',
      cache: false
    }).done(success).fail(error);
  };


  /*
  Execute ajax put
  @param url url
  @param data data to be sent
  @param success callback function when succeeded
  @param error callback function when failed
   */

  __sysRef.put = function(url, data, success, error) {
    var _ref;
    _ref = __wrapCallbacks(success, error), success = _ref[0], error = _ref[1];
    __root.log('PUT ' + url);
    return jQuery.ajax({
      url: url,
      method: 'PUT',
      contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
      data: data,
      dataType: 'json',
      cache: false
    }).done(success).fail(error);
  };


  /*
  Execute ajax post
  @param url url
  @param data data to be sent
  @param success callback function when succeeded
  @param error callback function when failed
   */

  __sysRef.post = function(url, data, success, error) {
    var _ref;
    _ref = __wrapCallbacks(success, error), success = _ref[0], error = _ref[1];
    __root.log('POST ' + url);
    return jQuery.ajax({
      url: url,
      method: 'POST',
      contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
      data: data,
      dataType: 'json'
    }).done(success).fail(error);
  };


  /*
  Execute ajax delete
  @param url url
  @param success callback function when succeeded
  @param error callback function when failed
   */

  __sysRef.del = function(url, success, error) {
    var _ref;
    _ref = __wrapCallbacks(success, error), success = _ref[0], error = _ref[1];
    __root.log('DELETE ' + url);
    return jQuery.ajax({
      url: url,
      method: 'DELETE',
      dataType: 'json'
    }).done(success).fail(error);
  };

  __wrapCallbacks = function(success, error) {
    if (typeof success !== 'function') {
      success = __sysRef.__onAjaxSuccess;
    }
    if (typeof error !== 'function') {
      error = __wrapErr(__sysRef.__onAjaxError);
    } else {
      error = __wrapErr(error);
    }
    return [success, error];
  };

  __wrapErr = function(fn) {
    return function(xhr, status, error) {
      var atext, p1, p2, _ref, _ref1, _ref2;
      if (xhr.status < 500 || xhr.status > 599) {
        return fn(-xhr.status, xhr.responseText);
      }
      if (status === 'error') {
        atext = (_ref = xhr.responseText) != null ? _ref.trim() : void 0;
        _ref1 = atext != null ? atext.split('*') : [1, ''], p1 = _ref1[0], p2 = _ref1[1];
        if (p2 === void 0) {
          _ref2 = [1, p1], p1 = _ref2[0], p2 = _ref2[1];
        } else {
          p1 = parseInt(p1);
        }
        return fn(p1, p2);
      } else {
        throw error;
      }
    };
  };

  __sysRef.__onAjaxSuccess = function(data) {
    return __root.log('Succeeded callback: ' + data);
  };

  __sysRef.__onAjaxError = function(ecode, emsg) {
    return __root.log('Failed callback: (' + ecode + ') ' + emsg);
  };


  /*
  Bind data to container
  @param cnt container
  @param data bindable data, should be an array
  @param func bind function
    func(cnt, item, i)
   */

  __sysRef.bind = function(cnt, data, func) {
    var i, item, _i, _len;
    if (data == null) {
      data = [];
    }
    __sysRef.assert(func, 'func should be Function, but ' + func);
    cnt.innerHTML = '';
    i = 0;
    for (_i = 0, _len = data.length; _i < _len; _i++) {
      item = data[_i];
      func(cnt, item, i);
      ++i;
    }
    return i;
  };

  __sysRef.HTML_ENTITY_RX = /&|\<|\>|\"|\s/g;


  /*
  Encode text to html
   */

  __sysRef.encode = function(s) {
    s = (s || '').toString();
    return s.replace(__sysRef.HTML_ENTITY_RX, function(ps) {
      if (ps === '&') {
        return '&amp;';
      } else if (ps === '<') {
        return '&lt;';
      } else if (ps === '>') {
        return '&gt;';
      } else if (ps === '"') {
        return '&quot;';
      } else {
        return '&nbsp;';
      }
    });
  };


  /*
  Make elipse text
  @param s source text
  @param maxLen max length of text
   */

  __sysRef.ellipsis = function(s, maxLen) {
    if (maxLen == null) {
      maxLen = 32;
    }
    s = (s || '').toString();
    if (s.length > maxLen - 2) {
      return s.substring(0, maxLen - 2) + '...';
    } else {
      return s;
    }
  };

  __sysRef.DATE_RX = /yyyy|MM|M|dd|d|HH|H|mm|m|ss|s/g;


  /*
  Format date to string
   */

  __sysRef.formatDate = function(t, fmt) {
    var sM, sMM, sd, sdd, sh, shh, sm, smm, ss, sss, syyyy;
    if (fmt == null) {
      fmt = 'yyyy-M-d';
    }
    if (!t) {
      return '';
    }
    if (typeof t === 'number') {
      t = new Date(t);
    } else if (typeof t === 'string') {
      t = new Date(parseInt(t));
    }
    fmt = 'yyyy-MM-dd';
    syyyy = t.getFullYear().toFixed(0);
    sM = (t.getMonth() + 1).toFixed(0);
    sMM = sM.length === 1 ? '0' + sM : sM;
    sd = t.getDate().toFixed(0);
    sdd = sd.length === 1 ? '0' + sd : sd;
    sh = t.getHours().toFixed(0);
    shh = sh.length === 1 ? '0' + sh : sh;
    sm = t.getMinutes().toFixed(0);
    smm = sm.length === 1 ? '0' + sm : sm;
    ss = t.getSeconds().toFixed(0);
    sss = ss.length === 1 ? '0' + ss : ss;
    return fmt.replace(__sysRef.DATE_RX, function(ps) {
      if (ps === 'yyyy') {
        return syyyy;
      } else if (ps === 'MM') {
        return sMM;
      } else if (ps === 'M') {
        return sM;
      } else if (ps === 'dd') {
        return sdd;
      } else if (ps === 'd') {
        return sd;
      } else if (ps === 'HH') {
        return shh;
      } else if (ps === 'H') {
        return sh;
      } else if (ps === 'mm') {
        return smm;
      } else if (ps === 'm') {
        return sm;
      } else if (ps === 's') {
        return ss;
      } else if (ps === 'ss') {
        return sss;
      } else {
        return '??' + ps + '??';
      }
    });
  };


  /*
  Format time to string
   */

  __sysRef.formatDateTime = function(t, fmt) {
    var sM, sMM, sd, sdd, sh, shh, sm, smm, ss, sss, syyyy;
    if (fmt == null) {
      fmt = 'yyyy-M-d';
    }
    if (!t) {
      return '';
    }
    if (typeof t === 'number') {
      t = new Date(t);
    } else if (typeof t === 'string') {
      t = new Date(parseInt(t));
    }
    syyyy = t.getFullYear().toFixed(0);
    sM = (t.getMonth() + 1).toFixed(0);
    sMM = sM.length === 1 ? '0' + sM : sM;
    sd = t.getDate().toFixed(0);
    sdd = sd.length === 1 ? '0' + sd : sd;
    sh = t.getHours().toFixed(0);
    shh = sh.length === 1 ? '0' + sh : sh;
    sm = t.getMinutes().toFixed(0);
    smm = sm.length === 1 ? '0' + sm : sm;
    ss = t.getSeconds().toFixed(0);
    sss = ss.length === 1 ? '0' + ss : ss;
    return fmt.replace(__sysRef.DATE_RX, function(ps) {
      if (ps === 'yyyy') {
        return syyyy;
      } else if (ps === 'MM') {
        return sMM;
      } else if (ps === 'M') {
        return sM;
      } else if (ps === 'dd') {
        return sdd;
      } else if (ps === 'd') {
        return sd;
      } else if (ps === 'HH') {
        return shh;
      } else if (ps === 'H') {
        return sh;
      } else if (ps === 'mm') {
        return smm;
      } else if (ps === 'm') {
        return sm;
      } else if (ps === 's') {
        return ss;
      } else if (ps === 'ss') {
        return sss;
      } else {
        return '??' + ps + '??';
      }
    });
  };


  /*
  Format number to string
   */

  __sysRef.formatNumber = function(t, th, dec) {
    var dp, ds, isNeg, ns, s;
    if (th == null) {
      th = true;
    }
    if (dec == null) {
      dec = 2;
    }
    if (!t && t !== 0) {
      return '';
    }
    if (dec < 0) {
      throw 'Invalid param "dec": ' + dec;
    }
    if (typeof t === 'string') {
      t = parseFloat(t);
    }
    if (t < 0) {
      isNeg = true;
      t = 0 - t;
    } else {
      isNeg = false;
    }
    s = t.toFixed(dec);
    dp = s.indexOf('.');
    if (dp === -1) {
      dp = s.length;
    }
    if (th) {
      ds = dp === s.length ? '' : s.slice(dp);
      ns = '';
      if (dp > 3) {
        ns = s.slice(dp - 3, dp);
        dp = dp - 3;
      }
      while (dp > 3) {
        ns = s.slice(dp - 3, dp) + ',' + ns;
        dp = dp - 3;
      }
      ns = s.slice(0, dp) + (ns.length > 0 ? ',' + ns : ns);
      s = ns + ds;
    }
    if (isNeg) {
      return '-' + s;
    } else {
      return s;
    }
  };


  /*
  Go to HTTP protocol
   */

  __sysRef.goHttp = function() {
    var loc;
    loc = __root.location;
    return __root.location.replace('http://' + loc.host + loc.pathname + loc.search + loc.hash);
  };


  /*
  Go to HTTPS protocol
   */

  __sysRef.goHttps = function() {
    var loc;
    loc = __root.location;
    return __root.location.replace('https://' + loc.host + loc.pathname + loc.search + loc.hash);
  };


  /*
  Parse query string
   */

  __sysRef.parseQString = function() {
    var ret, search, skey, ss, sss, svalue, _i, _len, _ref;
    search = __root.location.search;
    if (!search || search.trim() === '?') {
      return [];
    }
    search = search.slice(1);
    ss = search.split('&');
    ret = [];
    for (_i = 0, _len = ss.length; _i < _len; _i++) {
      sss = ss[_i];
      _ref = sss.split('='), skey = _ref[0], svalue = _ref[1];
      ret.push([__root.decodeURIComponent(skey.trim()), __root.decodeURIComponent(svalue)]);
    }
    return ret;
  };


  /*
  Make query string
  @param qs list of each query parameter, [[key1, value1], [key2, value2], etc...]
   */

  __sysRef.buildQString = function(qs) {
    var key, loc, s, value, _i, _len, _ref;
    if (qs == null) {
      qs = [];
    }
    s = '';
    for (_i = 0, _len = qs.length; _i < _len; _i++) {
      _ref = qs[_i], key = _ref[0], value = _ref[1];
      value = value === null ? '' : value.toString();
      s = s + (s ? '&' : '') + __root.encodeURIComponent(key) + '=' + __root.encodeURIComponent(value);
    }
    s = s ? '?' + s : '';
    loc = __root.location;
    return loc.protocol + '//' + loc.host + loc.pathname + s + loc.hash;
  };


  /*
  Get parameter by name
  @param name name of parameter
   */

  __sysRef.getParam = function(name) {
    var key, qs, value, _i, _len, _ref;
    qs = __sysRef.parseQString();
    for (_i = 0, _len = qs.length; _i < _len; _i++) {
      _ref = qs[_i], key = _ref[0], value = _ref[1];
      if (key === name) {
        return value;
      }
    }
    return '';
  };

  __sysRef.MAX_TOTAL_PN = 200;

  __sysRef.MAX_PN_BTNS = 11;


  /*
  Get current page
   */

  __sysRef.getPage = function() {
    var pn, pv, qs;
    qs = __sysRef.parseQString();
    pv = __sysRef.getParam('p');
    pn = __root.parseInt(pv);
    if (__root.isNaN(pn)) {
      pn = 1;
    }
    if (pn > __sysRef.MAX_TOTAL_PN) {
      pn = __sysRef.MAX_TOTAL_PN;
    }
    return pn;
  };


  /*
  Go to new page
  @param pn page number, start from 1
   */

  __sysRef.setPage = function(pn) {
    var flag, key, qs, value;
    if (pn == null) {
      pn = 1;
    }
    if (pn > __sysRef.MAX_TOTAL_PN) {
      pn = __sysRef.MAX_TOTAL_PN;
    }
    qs = __sysRef.parseQString();
    flag = false;
    qs = (function() {
      var _i, _len, _ref, _results;
      _results = [];
      for (_i = 0, _len = qs.length; _i < _len; _i++) {
        _ref = qs[_i], key = _ref[0], value = _ref[1];
        if (key.toLowerCase() === 'p') {
          flag = true;
          _results.push([key, pn.toString()]);
        } else {
          _results.push([key, value === null ? '' : value.toString()]);
        }
      }
      return _results;
    })();
    if (!flag) {
      qs.push(['p', pn.toString()]);
    }
    return __sysRef.buildQString(qs);
  };


  /*
  Create a new pagination
  @param cnt Container element
  @param totalPn total page number
   */

  __sysRef.createPage = function(cnt, totalPn, maxBtns) {
    var btn, createBtn, lbtn, pn, rbtn, _i, _j;
    if (totalPn == null) {
      totalPn = __sysRef.MAX_TOTAL_PN;
    }
    if (maxBtns == null) {
      maxBtns = __sysRef.MAX_PN_BTNS;
    }
    cnt.innerHTML = '';
    if (totalPn <= 0) {
      return 0;
    }
    if (totalPn > __sysRef.MAX_TOTAL_PN) {
      totalPn = __sysRef.MAX_TOTAL_PN;
    }
    if (maxBtns <= 0 || maxBtns > __sysRef.MAX_PN_BTNS) {
      maxBtns = __sysRef.MAX_PN_BTNS;
    }
    pn = __sysRef.getPage();
    lbtn = pn - Math.floor(maxBtns / 2);
    if (lbtn < 2) {
      lbtn = 2;
    }
    rbtn = lbtn + maxBtns - 1;
    if (rbtn > totalPn - 1) {
      rbtn = totalPn - 1;
    }
    createBtn = function(n, t) {
      var btn1;
      t = t || (n != null ? n.toString() : void 0);
      btn1 = __root.document.createElement('a');
      btn1.innerHTML = t;
      btn1.href = __sysRef.setPage(n);
      btn1.target = '_self';
      if (n === pn) {
        btn1.className = 'active';
        btn1.href = 'javascript:void 0;';
      }
      return cnt.appendChild(btn1);
    };
    if (pn !== 1) {
      createBtn(pn - 1, '&lt; \u4e0a\u4e00\u9875');
    }
    createBtn(1);
    if (totalPn > maxBtns) {
      if (lbtn > 2) {
        cnt.appendChild(__root.document.createTextNode('...'));
      }
      if (lbtn <= rbtn) {
        for (btn = _i = lbtn; lbtn <= rbtn ? _i <= rbtn : _i >= rbtn; btn = lbtn <= rbtn ? ++_i : --_i) {
          createBtn(btn);
        }
      }
      if (rbtn < totalPn - 1) {
        cnt.appendChild(__root.document.createTextNode('...'));
      }
      createBtn(totalPn);
    } else if (totalPn > 1) {
      for (btn = _j = 2; 2 <= totalPn ? _j <= totalPn : _j >= totalPn; btn = 2 <= totalPn ? ++_j : --_j) {
        createBtn(btn);
      }
    }
    if (pn !== totalPn) {
      return createBtn(pn + 1, '\u4e0b\u4e00\u9875 &gt;');
    }
  };


  /*
  Set cookie
  @param name name of cookie
  @param value value of cookie
  @param hours hours of cookie expires
   */

  __sysRef.setCookie = function(name, value, hours) {
    var date, str;
    if (hours == null) {
      hours = 0;
    }
    str = name + '=' + __root.encodeURIComponent(value);
    if (hours > 0) {
      date = new Date();
      date.setTime(date.getTime() + hours * 3600 * 1000);
      str = str + "; expires=" + date.toGMTString();
    }
    return document.cookie = str;
  };


  /*
  Get cookie value by name
  @param name name of cookie
   */

  __sysRef.getCookie = function(name) {
    var arrStr, key, s, value, _i, _len, _ref;
    arrStr = __root.document.cookie.split(";");
    for (_i = 0, _len = arrStr.length; _i < _len; _i++) {
      s = arrStr[_i];
      if (!s) {
        continue;
      }
      s = s.trim();
      _ref = s.split('='), key = _ref[0], value = _ref[1];
      if (key === name) {
        return __root.decodeURIComponent(value);
      }
    }
    return '';
  };


  /*
  Delete cookie by name
  @param name name of cookie
   */

  __sysRef.delCookie = function(name) {
    var date;
    date = new Date();
    date.setTime(date.getTime() - 1);
    return __root.document.cookie = name + "=; expires=" + date.toGMTString();
  };

  DLG_TRUE_CB = function() {
    return true;
  };


  /*
  Show modal dialog with info message
  @param content content of dialog
  @param okValue text of ok button
  @param okFun callback function when click 'OK'
   */

  __sysRef.infoDlg = function(content, okValue, okFun) {
    var d;
    if (content == null) {
      content = '';
    }
    if (okValue == null) {
      okValue = '\u786e\u8ba4';
    }
    if (okFun == null) {
      okFun = DLG_TRUE_CB;
    }
    d = dialog({
      title: '\u63d0\u793a',
      content: content,
      fixed: true,
      quickClose: true,
      cancelDisplay: false,
      okValue: okValue,
      ok: okFun
    });
    return d.showModal();
  };


  /*
  Show modal dialog with error message
  @param content content of dialog
  @param okValue text of ok button
  @param okFun callback function when click 'OK'
   */

  __sysRef.errorDlg = function(content, okValue, okFun) {
    var d;
    if (content == null) {
      content = '';
    }
    if (okValue == null) {
      okValue = '\u786e\u8ba4';
    }
    if (okFun == null) {
      okFun = DLG_TRUE_CB;
    }
    d = dialog({
      title: '\u9519\u8bef',
      content: content,
      fixed: true,
      quickClose: true,
      cancelDisplay: false,
      okValue: okValue,
      ok: okFun,
      cancel: okFun
    });
    return d.showModal();
  };


  /*
  Show modal dialog with confirm message
  @param content content of dialog
  @param title title of dialog
  @param yesValue text of ok button
  @param noValue text of cancel button
  @param yesFun callback function when click 'Yes'
  @param noFun callback function when click 'No'
   */

  __sysRef.confirmDlg = function(content, title, yesValue, noValue, yesFun, noFun) {
    var d;
    if (content == null) {
      content = '';
    }
    if (title == null) {
      title = '\u8be2\u95ee';
    }
    if (yesValue == null) {
      yesValue = '\u786e\u8ba4';
    }
    if (noValue == null) {
      noValue = '\u53d6\u6d88';
    }
    if (yesFun == null) {
      yesFun = DLG_TRUE_CB;
    }
    if (noFun == null) {
      noFun = DLG_TRUE_CB;
    }
    d = dialog({
      title: title,
      content: content,
      fixed: true,
      quickClose: true,
      okValue: yesValue,
      cancelValue: noValue,
      ok: yesFun,
      cancel: noFun
    });
    return d.showModal();
  };


  /*
  Get days between start date and end date
  include start date ,do not include end date
  @param et end date
  @param st start date
   */

  __sysRef.truncLocalDay = function(et, st) {
    var tet, tst;
    tet = new Date(et.getFullYear(), et.getMonth(), et.getDate());
    tst = new Date(st.getFullYear(), st.getMonth(), st.getDate());
    return (tet - tst) / (24 * 3600 * 1000);
  };

}).call(this);
